name: release
on:
  push:
    # Enable when testing release infrastructure on a branch.
    branches:
    - test-release-action
    tags:
    - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  build-test-crate:
    name: build-test-crate
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS: ""
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build: [linux-glibc, linux-musl, linux-arm, macos, win-msvc, win-gnu]
        include:
        - build: linux-glibc
          os: ubuntu-22.04
          target: x86_64-unknown-linux-gnu
        - build: linux-musl
          os: ubuntu-22.04
          target: x86_64-unknown-linux-musl
        - build: linux-arm
          os: ubuntu-22.04
          target: arm-unknown-linux-gnueabihf
        - build: macos
          os: macos-12
          target: x86_64-apple-darwin
        - build: win-msvc
          os: windows-2022
          target: x86_64-pc-windows-msvc
        - build: win-gnu
          os: windows-2022
          target: x86_64-pc-windows-gnu

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    # if we're on windows building with gnu we need to do something special
    # - name: Install win-gnu toolchain
    #   if: matrix.build == 'win-gnu'
    #   shell: bash
    #   run: |
    #     rustup override set $(cat ./rust-toolchain.toml | grep channel | sed 's/channel = "//' | sed 's/"//')-x86_64-gnu

    - name: Use Cross
      shell: bash
      if: matrix.os == 'ubuntu-22.04'
      run: |
        cargo install cross
        echo "CARGO=cross" >> $GITHUB_ENV

    - name: set targets
      shell: bash
      run: |
        echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
        echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

    - name: Show command used for Cargo
      run: |
        echo "cargo command is: ${{ env.CARGO }}"
        echo "target flag is: ${{ env.TARGET_FLAGS }}"
        echo "target dir is: ${{ env.TARGET_DIR }}"

    - name: Build testcrate using release library
      run: |
        cd testcrate
        ${{ env.CARGO }} build --verbose --release ${{ env.TARGET_FLAGS }}

  crates-release:
    name: crates.io-release
    needs: ['build-test-crate']
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
